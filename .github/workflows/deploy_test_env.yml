name: Deploy Testing Env

on:
  workflow_run:
    workflows: ["Code Testing"]
    types:
      - completed

# declaring global env variables
env:
  USERNAME: ${{ github.repository_owner }}
  REPOSITORY: ${{ github.event.repository.name }}


jobs:
  deploy_testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run the redis - BackEnd
        run: |
            #Authenticate to GitHub Packages using secret
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.pkg.github.com -u athuls121 --password-stdin
            docker image pull ${{ secrets.IMAGE_NAME_DB }}:${{ secrets.TAG }}
            docker run --rm -d --name redis -p 6379:6379 ${{ secrets.IMAGE_NAME_DB }}:${{ secrets.TAG }}

            #Authenticate to GitHub Packages using secret
            #echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.pkg.github.com -u athuls121 --password-stdin
            #docker image pull docker.pkg.github.com/athuls121/github-actions-project/redis_be:v1
            #docker run --rm -d --name redis -p 6379:6379 docker.pkg.github.com/athuls121/github-actions-project/redis_be:v1

      - name: Run the web_app - FrontEnd
        run: |
            #Authenticate to GitHub Packages using secret
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.pkg.github.com -u athuls121 --password-stdin
            docker image pull ${{ secrets.IMAGE_NAME_APP }}:${{ secrets.TAG }}
            docker run --rm -d --name web_app -p ${{ secrets.IMAGE_NAME_APP }}:${{ secrets.TAG }}

            #Authenticate to GitHub Packages using secret
            #echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.pkg.github.com -u athuls121 --password-stdin
            #docker image pull docker.pkg.github.com/athuls121/github-actions-project/web_app_fe:v1
            #docker run --rm -d --name web_app -p 8080:8080 docker.pkg.github.com/athuls121/github-actions-project/web_app_fe:v1

      - name: Verify web application using CURL
        run: |
          sleep 5s
          docker exec web_app curl http://localhost:8080
          docker ps

      - name: Wait for unit test to start
        run: sleep 10

      - name: Run Tests
        run: python test_app.py 2>&1 | tee test-report.txt


      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report-TestEnv
          path: test-report-TestEnv.txt
